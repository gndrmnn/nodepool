{
  "comments": [
    {
      "key": {
        "uuid": "7a3c09a3_18bfbf61",
        "filename": "nodepool/nodepool.py",
        "patchSetId": 2
      },
      "lineNbr": 735,
      "author": {
        "id": 16068
      },
      "writtenOn": "2017-01-18T06:14:42Z",
      "side": 1,
      "message": "just \"return num_requested + num_in_use \u003e provider_max\"?",
      "range": {
        "startLine": 733,
        "startChar": 8,
        "endLine": 735,
        "endChar": 20
      },
      "revId": "4f12a9116e5e312f3d0973c3ea86d95117420f55",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a3c09a3_33881c71",
        "filename": "nodepool/nodepool.py",
        "patchSetId": 2
      },
      "lineNbr": 777,
      "author": {
        "id": 16068
      },
      "writtenOn": "2017-01-18T06:14:42Z",
      "side": 1,
      "message": "I see this part on every exit of the function (and also in run).\n\nMaybe it makes sense to put request update and unlock into a resource manager or function decorator in order to guarantee all (future) exit paths of these functions automatically do this.",
      "range": {
        "startLine": 776,
        "startChar": 0,
        "endLine": 777,
        "endChar": 51
      },
      "revId": "4f12a9116e5e312f3d0973c3ea86d95117420f55",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a3c09a3_6fad459a",
        "filename": "nodepool/nodepool.py",
        "patchSetId": 2
      },
      "lineNbr": 777,
      "author": {
        "id": 3099
      },
      "writtenOn": "2017-01-18T12:31:58Z",
      "side": 1,
      "message": "We cannot do that because we do not always want to unlock after an update (see the example code where we set PENDING a few lines below).",
      "parentUuid": "7a3c09a3_33881c71",
      "range": {
        "startLine": 776,
        "startChar": 0,
        "endLine": 777,
        "endChar": 51
      },
      "revId": "4f12a9116e5e312f3d0973c3ea86d95117420f55",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a3c09a3_4185bdcc",
        "filename": "nodepool/nodepool.py",
        "patchSetId": 2
      },
      "lineNbr": 777,
      "author": {
        "id": 3099
      },
      "writtenOn": "2017-01-18T12:51:03Z",
      "side": 1,
      "message": "It\u0027s also possible I initially misunderstood your suggestion. :)  I now think you\u0027re suggesting decorating these two methods to make certain the lock is released. That might be a good idea if I end up with more methods that rely on that happening. I don\u0027t think it\u0027s worth it for 2 methods, ATM.",
      "parentUuid": "7a3c09a3_6fad459a",
      "range": {
        "startLine": 776,
        "startChar": 0,
        "endLine": 777,
        "endChar": 51
      },
      "revId": "4f12a9116e5e312f3d0973c3ea86d95117420f55",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}