{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4fce2e07_feb0c51d",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 4
      },
      "lineNbr": 359,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-08-23T21:30:21Z",
      "side": 1,
      "message": "Instead of calling the command \"disable\" why not call it \"hold\"?",
      "revId": "fed7d59c07c603bbf7c0aa0861a92b6f0cfc7e9a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c6f6671_a89a2a74",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 4
      },
      "lineNbr": 363,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-08-23T21:21:09Z",
      "side": 1,
      "message": "It might be a good idea to only allow a transition from the HOLD state to the READY state to avoid accidentally allowing a node to be reused while another job is still using the node.\n\nThis may not be sufficient though as we can disable a node and set it to HOLD before a job compeletes as well. It is more difficult to enforce the state change to HOLD though as you would race the next job starting if you want to only allow READY -\u003e HOLD.\n\nIt might also be a good idea to to restrict this to static nodes or require a --force type flag to apply these state changes to ephemeral nodes. This way it is more difficult to accidentally perform a state change on the wrong sort of node.",
      "revId": "fed7d59c07c603bbf7c0aa0861a92b6f0cfc7e9a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddb266c3_cdbf2bc2",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 4
      },
      "lineNbr": 363,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-08-23T21:30:21Z",
      "side": 1,
      "message": "We should actually just delete the node and let the driver handle processing it.  In the case of the static driver, the node will be re-registered.\n\nThis means you can drop the \"enable\" command entirely and use \"delete\" in your workflow.",
      "revId": "fed7d59c07c603bbf7c0aa0861a92b6f0cfc7e9a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96ad37a3_da92ff47",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 4
      },
      "lineNbr": 363,
      "author": {
        "id": 35200
      },
      "writtenOn": "2022-08-24T08:45:16Z",
      "side": 1,
      "message": "Fair point. That should be enough for our use-case still",
      "parentUuid": "ddb266c3_cdbf2bc2",
      "revId": "fed7d59c07c603bbf7c0aa0861a92b6f0cfc7e9a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e606d8b_2e089d7d",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 4
      },
      "lineNbr": 363,
      "author": {
        "id": 35200
      },
      "writtenOn": "2022-08-24T08:45:16Z",
      "side": 1,
      "message": "\u003e This may not be sufficient though as we can disable a node and set it to HOLD before a job completes as well\n\nWhen I tested it, this was not possible. I don\u0027t know the exact mechanism behind it in nodepool but it looked like a node is locked during a job execution and hence can\u0027t be disabled\n\n\n\u003e It might be a good idea to only allow a transition from the HOLD state to the READY state to avoid accidentally allowing a node to be reused while another job is still using the node.\n\nI agree that could be a good safeguard but when testing it, it was not possible to interrupt an ongoing build. I could only test it with static nodes.\n\nLooking at James\u0027 comments, I think it makes sense to drop the \u0027enable\u0027 command altogether\n\n\n\u003e It might also be a good idea to to restrict this to static nodes \n\nI like this idea but how do I get information about the node type or the corresponding driver?",
      "parentUuid": "7c6f6671_a89a2a74",
      "revId": "fed7d59c07c603bbf7c0aa0861a92b6f0cfc7e9a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff1e0f0b_1e07882d",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 4
      },
      "lineNbr": 363,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-08-25T17:00:23Z",
      "side": 1,
      "message": "I think it\u0027s okay to allow the \u0027hold\u0027 command for any node type.  It would let someone grab a min-ready node and use it for something.  Then they can delete it.\n\nIt\u0027s true that you can\u0027t go from in-use to hold because the client is expected to hold the lock for the entire time the node is in-use.",
      "parentUuid": "7c6f6671_a89a2a74",
      "revId": "fed7d59c07c603bbf7c0aa0861a92b6f0cfc7e9a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60c4bb33_6b4a9c11",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 4
      },
      "lineNbr": 363,
      "author": {
        "id": 4146
      },
      "writtenOn": "2022-08-25T18:59:55Z",
      "side": 1,
      "message": "Making sure I understand the proposed workflow here. Users would hold a node, then when any required work is done delete the node. In the case of ephemeral cloud nodes that frees the resources to be used by a new node. In the case of a static node the static driver will recreate the static node as ready?\n\nIf I\u0027ve understood correctly then I think this will work well.",
      "parentUuid": "ff1e0f0b_1e07882d",
      "revId": "fed7d59c07c603bbf7c0aa0861a92b6f0cfc7e9a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ab0ab6b_471ada5b",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 4
      },
      "lineNbr": 363,
      "author": {
        "id": 35200
      },
      "writtenOn": "2022-08-25T19:19:25Z",
      "side": 1,
      "message": "That sounds good to me; at least in the case of static nodes that is in line with what I had in mind for this feature.\nBut I\u0027ll let James have the final word here of course",
      "parentUuid": "60c4bb33_6b4a9c11",
      "revId": "fed7d59c07c603bbf7c0aa0861a92b6f0cfc7e9a",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}