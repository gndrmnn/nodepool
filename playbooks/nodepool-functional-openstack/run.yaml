# Pre playbook (temporarily here to avoid retries)
- hosts: all
  roles:
    - bindep
    - test-setup
    - install-devstack
  tasks:
    - name: Install python project from source
      include_role:
        name: install-if-python
      vars:
        zuul_work_dir: "{{ item.src_dir }}"
      loop: "{{ zuul.projects.values() | selectattr('required') | list }}"

- hosts: all
  vars:
    NODEPOOL_KEY: "$HOME/.ssh/id_nodepool"
    NODEPOOL_KEY_NAME: "root"
    NODEPOOL_PUBKEY: "$HOME/.ssh/id_nodepool.pub"
    NODEPOOL_INSTALL: "$HOME/nodepool-venv"
    NODEPOOL_CACHE_GET_PIP: "/opt/stack/cache/files/get-pip.py"
    NODEPOOL_CONFIG: "/etc/nodepool/nodepool.yaml"
  tasks:
    - name: Write clouds.yaml
      ignore_errors: True
      include_tasks: write_clouds_yaml.yaml
    - name: Create nodepool flavors
      ignore_errors: True
      shell: |
        . /opt/devstack/openrc
        nova flavor-create nodepool-512 64 512 5 1
        nova flavor-create nodepool-1024 128 1024 5 1
    - name: Create security groups
      ignore_errors: True
      shell: |
        . /opt/devstack/openrc
        openstack --os-project-name demo --os-username demo security group rule create --ingress --protocol tcp --dst-port 1:65535 --remote-ip 0.0.0.0/0 default
        openstack --os-project-name demo --os-username demo security group rule create --ingress --protocol udp --dst-port 1:65535 --remote-ip 0.0.0.0/0 default
    - name: Create unmanaged VM
      ignore_errors: True
      shell: |
        . /opt/devstack/openrc
        local cirros_image=$(openstack --os-project-name demo --os-username demo image list | grep cirros | awk '{print $4}' | head -n1)
        openstack --os-project-name demo --os-username demo server create --flavor cirros256 --image $cirros_image unmanaged-vm

    - name: Create nodepool SSH keypair
      ignore_errors: True
      shell: |
        . /opt/devstack/openrc
        ssh-keygen -f {{ NODEPOOL_KEY }} -P ""
        nova --os-project-name demo --os-username demo keypair-add --pub-key {{ NODEPOOL_PUBKEY }} {{ NODEPOOL_KEY_NAME }}

    - name: Write nodepool elements
      ignore_errors: True
      shell: |
        sudo mkdir -p $(dirname {{ NODEPOOL_CONFIG }}/elements/nodepool-setup/install.d
        sudo mkdir -p $(dirname {{ NODEPOOL_CONFIG }}/elements/nodepool-setup/root.d
        cat > /tmp/40-nodepool-setup <<EOF
        sudo mkdir -p /etc/nodepool
        # Make it world writeable so nodepool can write here later.
        sudo chmod 777 /etc/nodepool
        EOF
        cat > /tmp/50-apt-allow-unauthenticated <<EOF
        if [ -d "\$TARGET_ROOT/etc/apt/apt.conf.d" ]; then
            echo "APT::Get::AllowUnauthenticated \"true\";" | sudo tee \$TARGET_ROOT/etc/apt/apt.conf.d/95allow-unauthenticated
            echo "Acquire::AllowInsecureRepositories \"true\";" | sudo tee -a \$TARGET_ROOT/etc/apt/apt.conf.d/95allow-unauthenticated
        fi
        EOF
        sudo mv /tmp/40-nodepool-setup \
            $(dirname {{ NODEPOOL_CONFIG }})/elements/nodepool-setup/install.d/40-nodepool-setup
        sudo chmod a+x \
            $(dirname {{ NODEPOOL_CONFIG }})/elements/nodepool-setup/install.d/40-nodepool-setup
        sudo mv /tmp/50-apt-allow-unauthenticated \
            $(dirname {{ NODEPOOL_CONFIG }})/elements/nodepool-setup/root.d/50-apt-allow-unauthenticated
        sudo chmod a+x \
            $(dirname {{ NODEPOOL_CONFIG }})/elements/nodepool-setup/root.d/50-apt-allow-unauthenticated
        sudo mkdir -p {{ NODEPOOL_DIB_BASE_PATH }}/images
        sudo mkdir -p {{ NODEPOOL_DIB_BASE_PATH }}/tmp
        sudo mkdir -p {{ NODEPOOL_DIB_BASE_PATH }}/cache
        sudo chown -R {{ ansible_user }}:{{ ansible_user }} {{ NODEPOOL_DIB_BASE_PATH }}

    - name: Write nodepool config
      ignore_errors: True
      become: true
      template:
        src: nodepool.yaml.j2
        dest: "{{ NODEPOOL_CONFIG }}"

    - name: Validate nodepool config
      ignore_errors: True
      command: "./.venv/bin/nodepool -c {{ NODEPOOL_CONFIG }} config-validate"

    - name: Start nodepool builder
      ignore_errors: True
      # TODO(corvus): logging
      command: "./.venv/bin/nodepool-builder -c {{ NODEPOOL_CONFIG }}"

    - name: Start nodepool launcher
      ignore_errors: True
      command: "./.venv/bin/nodepool-launcher -c {{ NODEPOOL_CONFIG }}"
