{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "278a9fa8_a5d5b080",
        "filename": "nodepool/zk/zookeeper.py",
        "patchSetId": 3
      },
      "lineNbr": 766,
      "author": {
        "id": 9311
      },
      "writtenOn": "2023-05-02T22:08:24Z",
      "side": 1,
      "message": "To make this simpler, the LOST check can be removed and _ready could be set to False when entering _sessionListener?",
      "revId": "c4c7052f10c41f4919c9a8c0a1ab9c78aeebc72b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7eacff04_8dc9d991",
        "filename": "nodepool/zk/zookeeper.py",
        "patchSetId": 3
      },
      "lineNbr": 766,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-05-02T22:13:21Z",
      "side": 1,
      "message": "That\u0027s an option.  The current code would consider the cache to continue to be ready during the \"suspended\" time period, and only transition to \"not ready\" after the timeout.\n\nI don\u0027t have a strong opinion on which we should use.  I think either is appropriate for a \"cache\".",
      "parentUuid": "278a9fa8_a5d5b080",
      "revId": "c4c7052f10c41f4919c9a8c0a1ab9c78aeebc72b",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c4c7052f10c41f4919c9a8c0a1ab9c78aeebc72b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c4c7052f10c41f4919c9a8c0a1ab9c78aeebc72b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c4c7052f10c41f4919c9a8c0a1ab9c78aeebc72b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}