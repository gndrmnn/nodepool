{
  "comments": [
    {
      "key": {
        "uuid": "7a5de9d1_17350df6",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-01-28T18:49:48Z",
      "side": 1,
      "message": "The _completed flag is not necessary (see waitForCompletion).",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a5ae5dd_7386c714",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 10035
      },
      "writtenOn": "2016-02-04T16:56:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a5de9d1_17350df6",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a5de9d1_b73bd9ea",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-01-28T18:49:48Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a5ae5dd_f372b748",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 10035
      },
      "writtenOn": "2016-02-04T16:56:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a5de9d1_b73bd9ea",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a5de9d1_d73e95d9",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-01-28T18:49:48Z",
      "side": 1,
      "message": "The conditional is not necessary, once the event is set, it will continue to return True immediately.",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a5ae5dd_b393df4e",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 10035
      },
      "writtenOn": "2016-02-04T16:56:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a5de9d1_d73e95d9",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a5de9d1_7726c1cf",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 87,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-01-28T18:49:48Z",
      "side": 1,
      "message": "Why do we need to call deleteDibImage only if the job has started?  If it aborted halfway through the build, is the builder going to register the delete function?\n\nI confess, I\u0027d be more comfortable if this didn\u0027t depend on knowing the state.  I\u0027d much rather simply be able to call \"deleteDibImage\" at any time, and in any state, and have _it_ do the right thing.  If you agree, we can drop the record_only flag, as well as the job_started flag.",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a5ae5dd_4e519e61",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 87,
      "author": {
        "id": 10035
      },
      "writtenOn": "2016-02-04T16:56:31Z",
      "side": 1,
      "message": "Ah, so the flag is what I missed.\n\nI agree with the notion that deleteDibImage should try to make a best effort at doing the right thing. That means in scenarios where we lack sufficient state tracking it will do the conservative thing (not submit a delete job) and rely an a periodic cleanup (when that is implemented). Because we do not yet have periodic cleanup we decided (in irc a while back) for deleteDibImage to err on the side of submitting a delete job even though it may not exist.\n\nFor this specific case though, we know we do not want to submit a delete job, and we know deleteDibImage will (until we implement periodic cleanup). It seems silly to me for us to hit our own known resource leak (jobs which will never be serviced) at the cost of this bit of code... so how about we add a todo of removing this once deleteDibImage is smart enough to not submit a delete job?",
      "parentUuid": "7a5de9d1_7726c1cf",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a5de9d1_9721fdb6",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 103,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-01-28T18:49:48Z",
      "side": 1,
      "message": "This should all probably be in a try/except so that the super gets called, otherwise the JobTracker will wait forever.",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a5ae5dd_a98ef576",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 103,
      "author": {
        "id": 10035
      },
      "writtenOn": "2016-02-05T03:31:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a5de9d1_9721fdb6",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a5de9d1_37304901",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-01-28T18:49:48Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a5ae5dd_497f4166",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 10035
      },
      "writtenOn": "2016-02-05T03:31:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a5de9d1_37304901",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a5de9d1_572b8594",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 115,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-01-28T18:49:48Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a5ae5dd_e9986dc2",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 115,
      "author": {
        "id": 10035
      },
      "writtenOn": "2016-02-05T03:31:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a5de9d1_572b8594",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a5de9d1_f7187186",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 147,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-01-28T18:49:48Z",
      "side": 1,
      "message": "I don\u0027t think you need the commit here, that\u0027s about to happen as soon as you exit the context manager.",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a5ae5dd_c98b3167",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 147,
      "author": {
        "id": 10035
      },
      "writtenOn": "2016-02-05T03:31:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a5de9d1_f7187186",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a5de9d1_171c2d76",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 149,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-01-28T18:49:48Z",
      "side": 1,
      "message": "Same thing about try/except so that super gets called.",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a5ae5dd_69eb1d14",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 149,
      "author": {
        "id": 10035
      },
      "writtenOn": "2016-02-05T03:31:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a5de9d1_171c2d76",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a5de9d1_b712f960",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 155,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-01-28T18:49:48Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a5ae5dd_89f0d9ff",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 155,
      "author": {
        "id": 10035
      },
      "writtenOn": "2016-02-05T03:31:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a5de9d1_b712f960",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a5de9d1_d7153549",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 173,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-01-28T18:49:48Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a5ae5dd_49f661fa",
        "filename": "nodepool/jobs.py",
        "patchSetId": 5
      },
      "lineNbr": 173,
      "author": {
        "id": 10035
      },
      "writtenOn": "2016-02-05T03:31:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a5de9d1_d7153549",
      "revId": "60a90bb0acd2535d9c54abecf55e4a8ae61c0af4",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}