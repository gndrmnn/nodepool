{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c763ba39_f302c96c",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 8
      },
      "lineNbr": 388,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-08-31T13:31:15Z",
      "side": 1,
      "message": "This comment isn\u0027t correct?",
      "revId": "05ab4ebfef396bad1787955af402a8101e244f84",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ea0d83a_8f8dde83",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 8
      },
      "lineNbr": 400,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-08-31T13:31:15Z",
      "side": 1,
      "message": "I suggest s/disable/hold/ so that it\u0027s more clear what this does.",
      "revId": "05ab4ebfef396bad1787955af402a8101e244f84",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa2719d6_ac570ba2",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 8
      },
      "lineNbr": 413,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-08-31T13:31:15Z",
      "side": 1,
      "message": "Ditto?",
      "revId": "05ab4ebfef396bad1787955af402a8101e244f84",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81cb7f64_f7957747",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 8
      },
      "lineNbr": 430,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-08-31T13:31:15Z",
      "side": 1,
      "message": "Is there something we can do for this assertion other than waiting for a test timeout?\n\nMaybe the command should return immediately (exit code 1) if it can\u0027t lock it.  That\u0027s probably better for user experience.",
      "revId": "05ab4ebfef396bad1787955af402a8101e244f84",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "974e53fc_ceaad1d2",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 8
      },
      "lineNbr": 430,
      "author": {
        "id": 35200
      },
      "writtenOn": "2022-08-31T17:39:20Z",
      "side": 1,
      "message": "I think it would actually be good if the command waited for a locked node a reasonable amount of time (for example to finish a job) and afterwards set it to hold, hence the addition of the timeout flag to this command.",
      "parentUuid": "81cb7f64_f7957747",
      "revId": "05ab4ebfef396bad1787955af402a8101e244f84",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c56c8c1_efc60e8e",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 8
      },
      "lineNbr": 430,
      "author": {
        "id": 35200
      },
      "writtenOn": "2022-09-01T17:05:24Z",
      "side": 1,
      "message": "Maybe it is indeed better to have the command return w/ non-zero instead of misusing any timeout flag.\n\nBut I can\u0027t really think of a better way to test these cases than by expecting a timeout.\nThat begs the question, is it even necessary to test these cases? Are they already covered in other places? I guess the behavior of zk.HOLD and nodes that are busy are well-known",
      "parentUuid": "974e53fc_ceaad1d2",
      "revId": "05ab4ebfef396bad1787955af402a8101e244f84",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a63be71f_6d89eacd",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 8
      },
      "lineNbr": 430,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-09-08T17:11:30Z",
      "side": 1,
      "message": "It looks like the command should fail after 5 seconds now.  The actual code lgtm, but I\u0027m not sure why the test is passing with a timeoutexception instead of whatever exception is raised by the command failing.",
      "parentUuid": "81cb7f64_f7957747",
      "revId": "05ab4ebfef396bad1787955af402a8101e244f84",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "045300cf_11d9f7c0",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 8
      },
      "lineNbr": 430,
      "author": {
        "id": 35200
      },
      "writtenOn": "2022-09-08T19:07:38Z",
      "side": 1,
      "message": "It\u0027s timing out waiting for the lock:\n\n[...]\nFile \"nodepool/.tox/py3/lib/python3.8/site-packages/kazoo/recipe/lock.py\", line 280, in _inner_acquire\n    raise LockTimeout(\nkazoo.exceptions.LockTimeout: Failed to acquire lock on /nodepool/nodes/0000000000/lock after 5 seconds\n\nDuring handling of the above exception, another exception occurred:\n[...]\nFile \"nodepool/nodepool/zk/zookeeper.py\", line 1815, in lockNode\n    raise npe.TimeoutException(\nnodepool.exceptions.TimeoutException: Timeout trying to acquire lock /nodepool/nodes/0000000000/lock\n\nSo I assumed this is to be expected somehow",
      "parentUuid": "a63be71f_6d89eacd",
      "revId": "05ab4ebfef396bad1787955af402a8101e244f84",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b320f5c_5851e259",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 8
      },
      "lineNbr": 430,
      "author": {
        "id": 35200
      },
      "writtenOn": "2022-09-13T09:48:35Z",
      "side": 1,
      "message": "When I change the hold command to not have the lockNode invocation blocking, I think I get the expected exception that you were referring to, namely npe.ZKLockException",
      "parentUuid": "045300cf_11d9f7c0",
      "revId": "05ab4ebfef396bad1787955af402a8101e244f84",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b918028_480deff0",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 8
      },
      "lineNbr": 434,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-08-31T13:31:15Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "05ab4ebfef396bad1787955af402a8101e244f84",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b617b336_70272b6b",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 8
      },
      "lineNbr": 462,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-08-31T13:31:15Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "05ab4ebfef396bad1787955af402a8101e244f84",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}