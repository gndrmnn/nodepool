{
  "comments": [
    {
      "key": {
        "uuid": "5a74a57a_e7933359",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 4146
      },
      "writtenOn": "2016-11-28T23:33:26Z",
      "side": 1,
      "message": "Provider images is going to contain everything the provider knows about. The old code had a check to filter out the \"cloud provided\" images (though it was flawed beacuse it checked for snapshot as the type). I think we want a similar check here. Basically \"if metadata says this is nodepool managed image then consider it\".",
      "revId": "b722fa9c0e9f459eab0b3296418dec1bcfd52eea",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a74a57a_d338b9d5",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-11-29T01:41:56Z",
      "side": 1,
      "message": "Also, we don\u0027t seem to be getting \u0027metadata\u0027 attributes on images back from shade.  From the current code:\n    if image[\u0027metadata\u0027].get(\u0027image_type\u0027) \u003d\u003d \u0027snapshot\u0027:\nKeyError: \u0027metadata\u0027\n\nI think what Clark is suggesting is a good idea.",
      "revId": "b722fa9c0e9f459eab0b3296418dec1bcfd52eea",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a74a57a_07766f3d",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 4146
      },
      "writtenOn": "2016-11-28T23:33:26Z",
      "side": 1,
      "message": "And here is where the previous comment becomes important. We don\u0027t want to say the cloud provided ubuntu/centos/fedora image is an alien image because we can\u0027t ever do anything about those. Probably a good way to solev this problem is use a filter after getting the complete list to remove any we don\u0027t want to consider then use that list here and above.",
      "revId": "b722fa9c0e9f459eab0b3296418dec1bcfd52eea",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a74a57a_670ac38b",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 4146
      },
      "writtenOn": "2016-11-28T23:33:26Z",
      "side": 1,
      "message": "This might be slightly quicker if you use:\n\n  for image in provider_images:\n      if image[\u0027id\u0027] in alien_ids:\n          t.add_row(...)\n\nSince I think python does magical things for list inclusion testing.",
      "revId": "b722fa9c0e9f459eab0b3296418dec1bcfd52eea",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a74a57a_a70e9b89",
        "filename": "nodepool/tests/test_commands.py",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 4146
      },
      "writtenOn": "2016-11-28T23:33:26Z",
      "side": 1,
      "message": "The commit message asked about how to test the non empty case. Basically you will need to make it so that https://git.openstack.org/cgit/openstack-infra/nodepool/tree/nodepool/fakeprovider.py?h\u003dfeature/zuulv3#n182 returns images that match the nodepool criteria but are otherwise unknown to the nodepool db. Would be great to see that test as the empty case is the trivial one.",
      "revId": "b722fa9c0e9f459eab0b3296418dec1bcfd52eea",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}