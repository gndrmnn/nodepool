{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "06fb2e1d_1a00076d",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 14
      },
      "lineNbr": 303,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-10-11T15:41:55Z",
      "side": 1,
      "message": "If I\u0027m following correctly, trying to delete a locked node is now non-fatal?  Or am I missing something?  If not, then I don\u0027t think that\u0027s a change we should make.",
      "revId": "b16a1d8bfe32fbe0dc21752562b5d14d889a29cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1457123_7c42ad8e",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 14
      },
      "lineNbr": 326,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-10-11T15:41:55Z",
      "side": 1,
      "message": "Similarly to deleting, it seems like if we are unable to lock a node, the command should exit non-zero?",
      "revId": "b16a1d8bfe32fbe0dc21752562b5d14d889a29cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e4edfa1_f6e9a642",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 14
      },
      "lineNbr": 326,
      "author": {
        "id": 35200
      },
      "writtenOn": "2022-10-11T17:28:29Z",
      "side": 1,
      "message": "Not sure if I understand. I don\u0027t see the delete function or any other command return non-zero anywhere.",
      "parentUuid": "b1457123_7c42ad8e",
      "revId": "b16a1d8bfe32fbe0dc21752562b5d14d889a29cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efd7aafd_e1d98d21",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 14
      },
      "lineNbr": 326,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-10-11T18:18:31Z",
      "side": 1,
      "message": "My understanding (and I haven\u0027t run this locally to double check, so correct me if I\u0027m wrong) is that the current code will raise an exception if we run \"nodepool delete\" on a locked node.  Raising the exception will cause the CLI to exit rc\u003d1.  And some versions of this patch do the same for the \"hold\" command, which I think is the best behavior, but my concern with this version is that it would only print a statement that the node was locked and then exit rc\u003d0 because the exception was suppressed (and the same applied to delete).\n\nAnyway, to be clear, I think the best behavior for both delete and hold is to try to lock the node and exit with an error code if that fails.",
      "parentUuid": "2e4edfa1_f6e9a642",
      "revId": "b16a1d8bfe32fbe0dc21752562b5d14d889a29cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ba062ca_6a87d189",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 14
      },
      "lineNbr": 326,
      "author": {
        "id": 35200
      },
      "writtenOn": "2022-10-11T18:30:13Z",
      "side": 1,
      "message": "\u003e the current code will raise an exception if we run \"nodepool delete\" on a locked node.  Raising the exception will cause the CLI to exit rc\u003d1\n\nI see now, I thought you were referring to some explicit return 1 or something like that in the code.\nPS15 should behave as you describe now, exiting with an error if locking a node fails",
      "parentUuid": "efd7aafd_e1d98d21",
      "revId": "b16a1d8bfe32fbe0dc21752562b5d14d889a29cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdb75664_41bb4764",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 14
      },
      "lineNbr": 326,
      "author": {
        "id": 35200
      },
      "writtenOn": "2022-10-11T18:32:21Z",
      "side": 1,
      "message": "However, delete() and hold() behave slightly differently when locking a node: delete() will be blocking, leading to a TimeoutException while hold() is non-blocking and will cause a ZKLockException. Not sure what is the best behavior here but maybe it is okay like this?",
      "parentUuid": "2ba062ca_6a87d189",
      "revId": "b16a1d8bfe32fbe0dc21752562b5d14d889a29cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4c61753_571ce5ce",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 14
      },
      "lineNbr": 326,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-10-12T22:27:53Z",
      "side": 1,
      "message": "Is there any reason they should be different?  I would think that the current behavior for \"delete\" should be fine for both: blocking for 5 seconds.  That means if we can\u0027t obtain the lock within 5 seconds we give up.  The reason for that is to increase the chance that this succeeds even if one of the system components briefly locks the node for some purpose (they are permitted to do that).\n\nIn short, absent a compelling reason otherwise, I think we should just use the existing delete behavior for both commands.\n\nAlso, this is a bit of a nit, but this method isn\u0027t really necessary and it keeps tripping me up when I look for what else is using it, so if you make a new patchset to resolve the locking situation, maybe you could just move this to the hold() method.",
      "parentUuid": "fdb75664_41bb4764",
      "revId": "b16a1d8bfe32fbe0dc21752562b5d14d889a29cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e84dcac_1da57ce9",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 14
      },
      "lineNbr": 326,
      "author": {
        "id": 35200
      },
      "writtenOn": "2022-10-13T10:47:55Z",
      "side": 1,
      "message": "Got it, I changed it now. But with blocking\u003dTrue, we are back to a TimeoutException in one of the test cases which you commented on earlier. So I don\u0027t really know how to improve this if you\u0027re not happy with the test",
      "parentUuid": "f4c61753_571ce5ce",
      "revId": "b16a1d8bfe32fbe0dc21752562b5d14d889a29cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ab2f8be_856020cd",
        "filename": "nodepool/cmd/nodepoolcmd.py",
        "patchSetId": 14
      },
      "lineNbr": 326,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-10-14T14:20:26Z",
      "side": 1,
      "message": "I think I was confused about that earlier.  Now that I understand that this is a ZK lock timeout and not a test timeout, I think this is fine.",
      "parentUuid": "0e84dcac_1da57ce9",
      "revId": "b16a1d8bfe32fbe0dc21752562b5d14d889a29cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01b52bec_2e696b64",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 14
      },
      "lineNbr": 436,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-10-11T15:41:55Z",
      "side": 1,
      "message": "What is this tiny sleep for?",
      "revId": "b16a1d8bfe32fbe0dc21752562b5d14d889a29cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "889ab349_6f769e83",
        "filename": "nodepool/tests/unit/test_commands.py",
        "patchSetId": 14
      },
      "lineNbr": 470,
      "author": {
        "id": 1
      },
      "writtenOn": "2022-10-11T15:41:55Z",
      "side": 1,
      "message": "As I mentioned in the previous patchset, because of the paralellism in unit tests, we need longer delays in order for the test to be valid.",
      "revId": "b16a1d8bfe32fbe0dc21752562b5d14d889a29cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}