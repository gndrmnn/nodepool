{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f96cfb2d_8a858277",
        "filename": "nodepool/driver/__init__.py",
        "patchSetId": 1
      },
      "lineNbr": 585,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-08-31T18:57:01Z",
      "side": 1,
      "message": "The protocol should not allow this to happen.  This method is called very often and the additional ZK traffic is not desirable.\n\nSomething like this needs a test reproduction and if there is a protocol problem, likely a different fix that doesn\u0027t involve zk operations here.",
      "revId": "91f1dc01767c552116f6969e39e1abb5628b0239",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2d53fbf_f94d690f",
        "filename": "nodepool/driver/__init__.py",
        "patchSetId": 1
      },
      "lineNbr": 585,
      "author": {
        "id": 33934
      },
      "writtenOn": "2023-08-31T20:06:00Z",
      "side": 1,
      "message": "Is there some other way to do it without invoking zookeeper? If you drop this patch and run the test in https://review.opendev.org/c/zuul/nodepool/+/891635 it will hang because the node becomes pending (but will never be fulfilled because of the test setup) and then request is deleted.\n\nIn practice I guess maybe a node would never be stuck in pending state forever.... but it seems like handling that might be a good idea anyway?\n\nAlternative, we drop this if there is a way to \"unstick\" the node in the test in the next patch, I couldn\u0027t figure out a way to do it.",
      "parentUuid": "f96cfb2d_8a858277",
      "revId": "91f1dc01767c552116f6969e39e1abb5628b0239",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "91f1dc01767c552116f6969e39e1abb5628b0239",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=MAX","label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "91f1dc01767c552116f6969e39e1abb5628b0239",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Workflow=MAX","label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "91f1dc01767c552116f6969e39e1abb5628b0239",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}