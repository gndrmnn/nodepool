{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9c409031_813bf196",
        "filename": "nodepool/driver/statemachine.py",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-04-24T18:19:33Z",
      "side": 1,
      "message": "I hate to nitpick this but wouldn\u0027t this be clearer as:\n\n```\n  try:\n    ...\n  except exceptions.ConnectionTimeoutException as e:\n    self.log.warning(...)\n  except:\n    self.log.exception(...)\n```\n    \nThe use of `isinstance` here when `except` is basically type matching for us seems like a confusing way to do it.",
      "revId": "8d74042c30ed9bd3964e08cb87141b7502ffbfe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "101af437_eb0dc121",
        "filename": "nodepool/driver/statemachine.py",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-04-24T19:38:33Z",
      "side": 1,
      "message": "I did it this way to match the pattern below, where it\u0027s required.  It\u0027s easier copy-pasta that way, and easier to validate.  We could change it, but I don\u0027t think it\u0027s important.",
      "parentUuid": "9c409031_813bf196",
      "revId": "8d74042c30ed9bd3964e08cb87141b7502ffbfe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d593f79_aa224d09",
        "filename": "nodepool/driver/statemachine.py",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-04-24T20:43:03Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "101af437_eb0dc121",
      "revId": "8d74042c30ed9bd3964e08cb87141b7502ffbfe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffd6517e_c1abded5",
        "filename": "nodepool/driver/statemachine.py",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-04-24T18:19:33Z",
      "side": 1,
      "message": "See above. Though I note we\u0027re already using this pattern here.",
      "revId": "8d74042c30ed9bd3964e08cb87141b7502ffbfe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac7f1a1b_1dbe5b20",
        "filename": "nodepool/driver/statemachine.py",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 4146
      },
      "writtenOn": "2024-04-24T20:43:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffd6517e_c1abded5",
      "revId": "8d74042c30ed9bd3964e08cb87141b7502ffbfe0",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8d74042c30ed9bd3964e08cb87141b7502ffbfe0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8d74042c30ed9bd3964e08cb87141b7502ffbfe0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8d74042c30ed9bd3964e08cb87141b7502ffbfe0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}