{
  "comments": [
    {
      "key": {
        "uuid": "1f1a1f67_adad3aea",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 6488
      },
      "writtenOn": "2017-07-17T17:06:07Z",
      "side": 1,
      "message": "s/ a image / an image /",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_b7ca294b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 4162
      },
      "writtenOn": "2017-07-17T16:27:01Z",
      "side": 1,
      "message": "Q: why could we not store this information into zookeeper? Or is it a chicken and egg issue?\n\nFollow up, would pulling in something like dogpile.cache.dbm also make more sense? IIRC, it has a small dependency list",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 23,
        "endChar": 9
      },
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_721c9fc0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 3099
      },
      "writtenOn": "2017-07-17T16:55:17Z",
      "side": 1,
      "message": "Oops, responded to this in the comment section.",
      "parentUuid": "1f1a1f67_b7ca294b",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 23,
        "endChar": 9
      },
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_8db6fe3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 6488
      },
      "writtenOn": "2017-07-17T17:06:07Z",
      "side": 1,
      "message": "This information is specifically a unique identifier to use to identify an instance of nodepool to Zookeeper. Hostname has cross-cutting implications beyond nodepool including monitoring, logging, etc, and they may in fact change. Requiring operators to be careful about them makes managing servers that run nodepool complicated where it doesn\u0027t need to be.",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_724fff33",
        "filename": "doc/source/configuration.rst",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 4162
      },
      "writtenOn": "2017-07-17T16:43:57Z",
      "side": 1,
      "message": "Warning: BIKESHED TIME\n\nSo, what if we took a page from zookeepers book and just created a myid file into /etc/nodepool. Then, just have nodepool read that on startup to identify its self?\n\nThen we\u0027d have it as a CLI option, defaulting to /etc/nodepool/myid.\n\nI\u0027m finding it a little odd to have builder-id-file here in nodepool.yaml, that\u0027s the reason for painting",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_b293575b",
        "filename": "doc/source/configuration.rst",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1
      },
      "writtenOn": "2017-07-17T16:48:36Z",
      "side": 1,
      "message": "The problem with /etc is that it should not be writable by nodepool, so we can\u0027t have it create it there.\n\nHowever, we do expect every builder to be able to write to its image build directory, so why don\u0027t we store the file there?  Then there\u0027s no need to specify the file location in the config.  The only circumstance where that would not work is if multiple builders used shared storage for the images.\n\n(To be honest, that might even be okay.  We\u0027re really trying to identify \"builders which should have access to this image on disk\".  If there\u0027s more than one of those, maybe it\u0027s okay for them to have the same ID.)",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_b27c771f",
        "filename": "doc/source/configuration.rst",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 3099
      },
      "writtenOn": "2017-07-17T16:52:19Z",
      "side": 1,
      "message": "I actually considered using /etc/nodepool, but then we\u0027d have to give the builder write permission there, which made me feel icky.\n\nI hadn\u0027t considered any CLI commands that might make use of this, but I suppose it is conceivable we might add some to make use of it. E.g, a command to list all of \"my\" image builds.",
      "parentUuid": "1f1a1f67_724fff33",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_4d86a668",
        "filename": "doc/source/configuration.rst",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 6488
      },
      "writtenOn": "2017-07-17T17:06:07Z",
      "side": 1,
      "message": "It\u0027s more of a tradeoff than \"one is better than the other\". Using hostname means the burden is on the operator to make sure the hostname is unique and doesn\u0027t change between build attempts. Using UUID means the file on disk is extremely important to preserve. There will be shops where hostname comes from a container and can be aggressively maintained, and they\u0027ll be fine without the UUID. There will also be shops where hostname is part of a larger configuration of tools on the box where nodepool runs, and thus the UUID is the better way to isolate.",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_2d8b6a6e",
        "filename": "doc/source/configuration.rst",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 6488
      },
      "writtenOn": "2017-07-17T17:06:07Z",
      "side": 1,
      "message": "I think we should add a mention of the backward compat rule here, and warn that all nodepool builders need to be restarted with builder-id-file set before hostnames can be reused safely.",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_d2c7f395",
        "filename": "doc/source/configuration.rst",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1
      },
      "writtenOn": "2017-07-17T16:41:03Z",
      "side": 1,
      "message": "[+0] I\u0027d suggest a .txt extension as an example so that folks feel more comfortable inspecting it.",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_72725f4b",
        "filename": "doc/source/configuration.rst",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 3099
      },
      "writtenOn": "2017-07-17T16:52:19Z",
      "side": 1,
      "message": "Absolutely.",
      "parentUuid": "1f1a1f67_d2c7f395",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_0d7c2e70",
        "filename": "doc/source/configuration.rst",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 6488
      },
      "writtenOn": "2017-07-17T17:06:07Z",
      "side": 1,
      "message": "/var/db isn\u0027t a thing in FHS. /var/lib/nodepool or /var/nodepool would be more appropriate.",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_32350790",
        "filename": "nodepool/builder.py",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 4162
      },
      "writtenOn": "2017-07-17T16:43:57Z",
      "side": 1,
      "message": "Ya, maybe we can also emit a deprecated warning below so we can eventually remove this?",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 245,
        "endChar": 75
      },
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_32e4e7e0",
        "filename": "nodepool/builder.py",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 3099
      },
      "writtenOn": "2017-07-17T16:52:19Z",
      "side": 1,
      "message": "Well, except we aren\u0027t really deprecating it. We still allow the option for use of hostname. Perhaps a WARNING might make more sense? But since the warning already exists in the documentation I added, maybe that\u0027s being too verbose about it. I could go either way.",
      "parentUuid": "1f1a1f67_32350790",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 245,
        "endChar": 75
      },
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_6db3a24e",
        "filename": "nodepool/builder.py",
        "patchSetId": 1
      },
      "lineNbr": 1074,
      "author": {
        "id": 6488
      },
      "writtenOn": "2017-07-17T17:06:07Z",
      "side": 1,
      "message": "uuid1 is a little haphazard when performance isn\u0027t critical. It _should_ be unique between boxes that have different MAC addresses when run in the same second. But the risk of collision is at about 16 bits of entropy when you consider how not-random MAC addresses are in VMs and containers (if the box has the same MAC, you get 14 bits of entropy). I see no reason to build on a tiny bit of entropy when we can have all the entropy of the system\u0027s PRNG with uuid4().",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_b2c47792",
        "filename": "nodepool/zk.py",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1
      },
      "writtenOn": "2017-07-17T16:41:03Z",
      "side": 1,
      "message": "[-1] Can we add a hostname field for the convenience of the operator?",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1a1f67_d2d25300",
        "filename": "nodepool/zk.py",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 3099
      },
      "writtenOn": "2017-07-17T16:52:19Z",
      "side": 1,
      "message": "Yah, totes.",
      "parentUuid": "1f1a1f67_b2c47792",
      "revId": "11a30c19b2602cb01d7fefe54f5357ce58ecd2b2",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}