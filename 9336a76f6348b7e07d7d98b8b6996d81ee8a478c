{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "38da853c_37a1788d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-08-12T17:30:51Z",
      "side": 1,
      "message": "I\u0027m not sure I understand the situation you\u0027re describing.\n\nWhy would the statemachine runner delete the backing node?  It should still be locked by the metastatic driver, which means it\u0027s in use.  The statemachine runner shouldn\u0027t decide to delete it until after the listResources decides it should be allowed to be deleted.",
      "revId": "9336a76f6348b7e07d7d98b8b6996d81ee8a478c",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3fcd1be_15c60690",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 33134
      },
      "writtenOn": "2024-08-13T06:53:24Z",
      "side": 1,
      "message": "I think as soon as the following two lines are executed, the node is allowed to be deleted:\n```\nnode.state \u003d zk.USED\nself.zk.storeNode(node)\n```\nAnd it could happen the next line `self.zk.forceUnlockNode(node)` and the statemachine runner tries to delete the node at the same time.",
      "parentUuid": "38da853c_37a1788d",
      "revId": "9336a76f6348b7e07d7d98b8b6996d81ee8a478c",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29b11eeb_507c0694",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-08-13T16:10:08Z",
      "side": 1,
      "message": "The launcher should not attempt to delete a node that it can\u0027t lock, and it should not be able to lock the node until we unlock it.\n\nI believe the problem is described here: https://review.opendev.org/c/zuul/nodepool/+/926221",
      "parentUuid": "38da853c_37a1788d",
      "revId": "9336a76f6348b7e07d7d98b8b6996d81ee8a478c",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5e099c3_24a13f29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 35923
      },
      "writtenOn": "2024-08-02T08:33:31Z",
      "side": 1,
      "message": "Seeing the same exception and not released  nodes until launcher restart in our environment. Thanks for fix, will also check on our side later.",
      "revId": "9336a76f6348b7e07d7d98b8b6996d81ee8a478c",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe2d9263_924e368e",
        "filename": "nodepool/driver/metastatic/adapter.py",
        "patchSetId": 9
      },
      "lineNbr": 327,
      "author": {
        "id": 33134
      },
      "writtenOn": "2024-08-13T10:40:25Z",
      "side": 1,
      "message": "After this line is executed, the node would be allowed to be removed by the statemachine runner. So it could happen that the statemachine runner and the line below `self.zk.forceUnlockNode(node)` could be trying to delete the node at the same time, which leads to the exception mentioned in the description of this change.",
      "revId": "9336a76f6348b7e07d7d98b8b6996d81ee8a478c",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}