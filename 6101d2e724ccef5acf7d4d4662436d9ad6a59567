{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "77785eb3_3ad23867",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-30T13:47:24Z",
      "side": 1,
      "message": "This code doesn\u0027t know anything about the fleet api; so you should add the None check in addition to the existing cores check.",
      "revId": "6101d2e724ccef5acf7d4d4662436d9ad6a59567",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a59d357_c8e6b2b2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 33134
      },
      "writtenOn": "2024-07-30T13:55:13Z",
      "side": 1,
      "message": "I mentioned the fleet api is to try to explain why we do not need to check `cores` here. What I really want to explain is as long as the node.resources is not None, it should be a valid value to return, no matter it is fleet API or not. \nAdding a `cores` check do no harm but seems not necessary?",
      "parentUuid": "77785eb3_3ad23867",
      "revId": "6101d2e724ccef5acf7d4d4662436d9ad6a59567",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6001c36_3e5d4473",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1
      },
      "writtenOn": "2024-07-30T16:09:53Z",
      "side": 1,
      "message": "I believe we originally added the cores check because in the fleet api, we:\n1) Send the create fleet api call\n2) Set node.resources to QuotaInformation(instances\u003d1)\n3) Receive the create fleet api response\n4) Set node.resources to QuotaInformation(instances\u003d1, cores\u003dX)\n\nSo this was originally designed to only trigger once step #4 happened.  However, I think I agree with you that it should be safe to run any time we have a non-null node.resources, so I think this change is okay as written.",
      "parentUuid": "77785eb3_3ad23867",
      "revId": "6101d2e724ccef5acf7d4d4662436d9ad6a59567",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9de49fc3_bf7c3236",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 33134
      },
      "writtenOn": "2024-07-29T10:51:43Z",
      "side": 1,
      "message": "recheck",
      "revId": "6101d2e724ccef5acf7d4d4662436d9ad6a59567",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1879b30_8695928e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 33134
      },
      "writtenOn": "2024-07-29T14:06:29Z",
      "side": 1,
      "message": "recheck",
      "revId": "6101d2e724ccef5acf7d4d4662436d9ad6a59567",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8265ea01_3184e8e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 28088
      },
      "writtenOn": "2024-07-31T08:08:31Z",
      "side": 1,
      "message": "regate",
      "revId": "6101d2e724ccef5acf7d4d4662436d9ad6a59567",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "280e9091_70cb0fb6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 28088
      },
      "writtenOn": "2024-07-31T08:30:07Z",
      "side": 1,
      "message": "recheck",
      "revId": "6101d2e724ccef5acf7d4d4662436d9ad6a59567",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6101d2e724ccef5acf7d4d4662436d9ad6a59567",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6101d2e724ccef5acf7d4d4662436d9ad6a59567",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6101d2e724ccef5acf7d4d4662436d9ad6a59567",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}