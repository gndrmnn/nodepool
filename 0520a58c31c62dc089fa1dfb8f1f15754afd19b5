{
  "comments": [
    {
      "key": {
        "uuid": "180eed0b_c0bf2b0c",
        "filename": "doc/source/aws.rst",
        "patchSetId": 20
      },
      "lineNbr": 41,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-02-04T17:17:28Z",
      "side": 1,
      "message": "Should we add an example diskimage-import configuration here since the new label below uses a diskimage? My read of the diskimage-import documentation is that this provider must now supply diskimage-import configs so having that in the example is probably a good idea.",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e5d0d95_9412c8ba",
        "filename": "doc/source/aws.rst",
        "patchSetId": 20
      },
      "lineNbr": 41,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-02-06T22:30:20Z",
      "side": 1,
      "message": "I think that would be good.",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78f73c_8f727ef3",
        "filename": "doc/source/aws.rst",
        "patchSetId": 20
      },
      "lineNbr": 270,
      "author": {
        "id": 29671
      },
      "writtenOn": "2021-01-15T09:52:58Z",
      "side": 1,
      "message": "Most of the time this should be `winrm` for windows nodes (since ssh modules are still experimental).\n\n\u003e However when creating Windows images this should be set to ``winrm`` for ansible to access the node.\n\n\nBut technically dib also cannot create windows images :)",
      "range": {
        "startLine": 269,
        "startChar": 20,
        "endLine": 270,
        "endChar": 47
      },
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aef68a4b_15f59279",
        "filename": "doc/source/aws.rst",
        "patchSetId": 20
      },
      "lineNbr": 270,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-02-06T22:30:20Z",
      "side": 1,
      "message": "I think this is okay as written since windows does support both ssh and winrm.",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d7fdc80_97894e5d",
        "filename": "nodepool/driver/aws/config.py",
        "patchSetId": 20
      },
      "lineNbr": 359,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-02-04T17:17:28Z",
      "side": 1,
      "message": "The docs call this key diskimage-import. I think we need to make the schema and docs agreee?",
      "range": {
        "startLine": 359,
        "startChar": 13,
        "endLine": 359,
        "endChar": 21
      },
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1f13587_aead4f40",
        "filename": "nodepool/driver/aws/config.py",
        "patchSetId": 20
      },
      "lineNbr": 359,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-02-06T22:30:20Z",
      "side": 1,
      "message": "Yes.  This should have failed testing, but I guess extra keys are allowed, and this schema isn\u0027t sophisticated enough to make diskimage-import required conditional on diskimages being present.",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4b1eb82_ff2e2d37",
        "filename": "nodepool/driver/aws/provider.py",
        "patchSetId": 20
      },
      "lineNbr": 169,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-02-06T22:30:20Z",
      "side": 1,
      "message": "I notice that the s3 dest is basically just the image name.  If it leaks and then we later upload a new image with the same name, will that just overwrite the previous image?  If so, then great.  If not, we may need to do more leak handling here.",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d3913dd_2c01a434",
        "filename": "nodepool/driver/aws/provider.py",
        "patchSetId": 20
      },
      "lineNbr": 210,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-02-06T22:30:20Z",
      "side": 1,
      "message": "Not a minus one: we could use iterate_timeout here and have a really long timeout in case the import gets permanently stuck.",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41de7c6f_52b81487",
        "filename": "nodepool/driver/aws/provider.py",
        "patchSetId": 20
      },
      "lineNbr": 213,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-02-04T17:17:28Z",
      "side": 1,
      "message": "You may want to put this s3 delete in a finally block to ensure that nodepool will try very hard to clean it up even if things go wrong. This will help avoid leaking objects in s3.",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26fc3ec5_18730894",
        "filename": "nodepool/driver/aws/provider.py",
        "patchSetId": 20
      },
      "lineNbr": 213,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-02-06T22:30:20Z",
      "side": 1,
      "message": "I agree, that is easy and worthwhile.",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ced99981_871299b1",
        "filename": "nodepool/driver/aws/provider.py",
        "patchSetId": 20
      },
      "lineNbr": 232,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-02-04T17:17:28Z",
      "side": 1,
      "message": "Related to my concern about leaks above. You may also want to check if the s3 object is present at this point and delete it here as well if so.",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f33eaf3_b1d25130",
        "filename": "nodepool/driver/aws/provider.py",
        "patchSetId": 20
      },
      "lineNbr": 232,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-02-06T22:30:20Z",
      "side": 1,
      "message": "Agreed, and if the deletion fails, let that exception propogate up so we keep the ZK record.",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8240b0dc_31a4e04d",
        "filename": "nodepool/tests/fixtures/aws.yaml",
        "patchSetId": 20
      },
      "lineNbr": 33,
      "author": {
        "id": 4146
      },
      "writtenOn": "2021-02-04T17:17:28Z",
      "side": 1,
      "message": "Doesn\u0027t this need a vmimport/diskimage-import section too?",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "350625a5_062c6aea",
        "filename": "nodepool/tests/fixtures/aws.yaml",
        "patchSetId": 20
      },
      "lineNbr": 33,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-02-06T22:30:20Z",
      "side": 1,
      "message": "Agreed.",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2b17458_831afcfe",
        "filename": "nodepool/tests/unit/test_driver_aws.py",
        "patchSetId": 20
      },
      "lineNbr": 204,
      "author": {
        "id": 1
      },
      "writtenOn": "2021-02-06T22:30:20Z",
      "side": 1,
      "message": "This causes the new code not to run (because it adds the data to ZK as if it had already run).  The rest of the AWS tests use boto to actually exercise nodepool code.  Can we do that here?",
      "revId": "0520a58c31c62dc089fa1dfb8f1f15754afd19b5",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}