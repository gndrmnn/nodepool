{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "673acdbc_2ef46af7",
        "filename": "nodepool/tests/unit/test_zk.py",
        "patchSetId": 2
      },
      "lineNbr": 1368,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-06-02T18:11:46Z",
      "side": 1,
      "message": "The image pause case has a result of `(\u0027NAME\u0027,)` which means that we\u0027ll try to assert None below which doesn\u0027t match the result value above. To avoid confusion should we set the result to `None` instead?\n\nI guess the issue below is that we are calling two different parsing methods and expect different results. Maybe worth a comment at least?",
      "range": {
        "startLine": 1368,
        "startChar": 50,
        "endLine": 1368,
        "endChar": 63
      },
      "revId": "a21245d5952bfc0f18332dac95ce1559e9b811db",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8189cbd_f122ae86",
        "filename": "nodepool/tests/unit/test_zk.py",
        "patchSetId": 2
      },
      "lineNbr": 1368,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-06-05T16:01:01Z",
      "side": 1,
      "message": "Yes to the second paragraph, one indicates whether the node is an object that is carried by this cache, the other doesn\u0027t.  In retrospect, probably worth a note.",
      "parentUuid": "673acdbc_2ef46af7",
      "revId": "a21245d5952bfc0f18332dac95ce1559e9b811db",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "617cb488_beb9791b",
        "filename": "nodepool/zk/zookeeper.py",
        "patchSetId": 2
      },
      "lineNbr": 760,
      "author": {
        "id": 4146
      },
      "writtenOn": "2023-06-02T18:11:46Z",
      "side": 1,
      "message": "Should these two thread start() calls be moved into the _start() method so that if you stop() there is a way to start again without creating a new object?",
      "revId": "a21245d5952bfc0f18332dac95ce1559e9b811db",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94f4b668_c0a6d2c5",
        "filename": "nodepool/zk/zookeeper.py",
        "patchSetId": 2
      },
      "lineNbr": 760,
      "author": {
        "id": 1
      },
      "writtenOn": "2023-06-05T16:01:01Z",
      "side": 1,
      "message": "That would be a good design and we should probably do that if we generalize this more.  I was trying to avoid changes to the startup/shutdown sequence in nodepool.",
      "parentUuid": "617cb488_beb9791b",
      "revId": "a21245d5952bfc0f18332dac95ce1559e9b811db",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a21245d5952bfc0f18332dac95ce1559e9b811db",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a21245d5952bfc0f18332dac95ce1559e9b811db",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a21245d5952bfc0f18332dac95ce1559e9b811db",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}