{
  "comments": [
    {
      "key": {
        "uuid": "3afc51ec_b4d8261f",
        "filename": "nodepool/fakeprovider.py",
        "patchSetId": 54
      },
      "lineNbr": 40,
      "author": {
        "id": 14119
      },
      "writtenOn": "2016-03-11T16:22:44Z",
      "side": 1,
      "message": "technically this doesnt mean its set to True, just set to something that doesnt eval as False",
      "revId": "6c7930002916ae5222dd1b710c07f3c523960dfe",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afc51ec_94f88a7e",
        "filename": "nodepool/fakeprovider.py",
        "patchSetId": 54
      },
      "lineNbr": 65,
      "author": {
        "id": 14119
      },
      "writtenOn": "2016-03-11T16:22:44Z",
      "side": 1,
      "message": "too many new lines",
      "revId": "6c7930002916ae5222dd1b710c07f3c523960dfe",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afc51ec_9489aacd",
        "filename": "nodepool/fakeprovider.py",
        "patchSetId": 54
      },
      "lineNbr": 143,
      "author": {
        "id": 14119
      },
      "writtenOn": "2016-03-11T16:22:44Z",
      "side": 1,
      "message": "sending messages to log should use c-style vars passed with a comment not \"%s\" % mesg. This avoids an annoying and horrible to track down bug. But what you ahve fits current coding, it should be changed everywhere else.\n\n    log.debug(\"%s\", mesg)",
      "revId": "6c7930002916ae5222dd1b710c07f3c523960dfe",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afc51ec_82a32c9e",
        "filename": "nodepool/fakeprovider.py",
        "patchSetId": 54
      },
      "lineNbr": 143,
      "author": {
        "id": 1
      },
      "writtenOn": "2016-03-11T16:52:10Z",
      "side": 1,
      "message": "That is one solution, however, under the prevailing style in nodepool it would actually be:\n\n\"Delete from %s\" % (repr(instance_list),)\n\nWhich is equally safe as the other approach.  So I do think this should be changed -- but only to match everywhere else.",
      "revId": "6c7930002916ae5222dd1b710c07f3c523960dfe",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afc51ec_f8dbbc19",
        "filename": "nodepool/fakeprovider.py",
        "patchSetId": 54
      },
      "lineNbr": 143,
      "author": {
        "id": 14119
      },
      "writtenOn": "2016-03-11T18:36:59Z",
      "side": 1,
      "message": "I happen to agree with the consistency arguement, however I disagree it is equally safe for all cases, just for a few cases what you purpose is solved as well using c-style variable passing.\n\nusing \u0027%\u0027 or .format() will result in an exception being raised if the string interpolation fails for some reason (unicode or bad variable or whatever reason) for example:\n\n    log.debug(\u0027%s %s\u0027 % var1)\n\nbreaks the program whereas using \n\n    log.debug(\u0027%s %s\u0027, var1)\n\n_wont_ block and fail the program, it will just report the error in the log",
      "parentUuid": "3afc51ec_82a32c9e",
      "revId": "6c7930002916ae5222dd1b710c07f3c523960dfe",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}