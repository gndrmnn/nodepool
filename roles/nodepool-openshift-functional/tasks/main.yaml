- name: debug groups
  debug:
    var: groups['cluster']
  ignore_errors: yes

- name: debug hostvars
  debug:
    var: hostvars
  ignore_errors: yes

- name: Ensure oc client is installed
  package:
    name: origin-clients
  become: yes

- name: Login to the openshift cluster as developer
  command: >
      oc login -u developer -p developer --insecure-skip-tls-verify=true
      https://{{ hostvars['cluster']['ansible_host'] }}:8443

- name: debug context names
  command: oc config get-contexts

- name: Update nodepool.yaml
  copy:
    content: |
      zookeeper-servers:
        - host: localhost
      images-dir: "{{ ansible_user_dir }}/work/images/"
      build-log-dir: "{{ ansible_user_dir }}/work/logs/nodepool/"
      labels:
        - name: openshift-project
          min-ready: 1
        - name: openshift-pod
          min-ready: 1
      providers:
        - name: openshift
          driver: openshift
          context: "/hostname:8443/self-provisioner-service-account"
          pools:
            - name: main
              labels:
                - name: openshift-project
                  type: project
                - name: openshift-pod
                  type: pod
                  image: docker.io/fedora:28
    dest: "{{ ansible_user_dir }}/work/etc/nodepool.yaml"

- name: Set nodepool_command facts
  set_fact:
    nodepool_command: nodepool -c "{{ ansible_user_dir }}/work/etc/nodepool.yaml"

- name: Wait for nodes
  command: "{{ nodepool_command }} list"
  register: nodepool_list
  until: nodepool_list.stdout
  retries: 120
  delay: 2

- name: Show nodes
  command: "{{ nodepool_command }} list --detail"

- name: Wait for fedora pod to be running
  shell: "{{ nodepool_command }} list | grep 'openshift-pod.*running'"
  register: nodepool_list
  until: nodepool_list.stdout
  retries: 120
  delay: 2
  ignore_errors: yes

- name: Show nodes
  command: "{{ nodepool_command }} list --detail"

- name: Show namespace
  command: oc get projects
